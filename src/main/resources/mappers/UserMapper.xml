<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eleverse.eleverse.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.eleverse.eleverse.pojo.User">
    <id column="userID" jdbcType="VARCHAR" property="userid" />
    <result column="dataID" jdbcType="VARCHAR" property="dataid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="ylzd" jdbcType="VARCHAR" property="ylzd" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    userID, dataID, username, password, version, ylzd, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eleverse_user
    where userID = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="countByUsername" resultType="java.lang.Integer">
    select
    count(*)
    from eleverse_user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByUsername" resultType="com.eleverse.eleverse.pojo.User">
    select
    <include refid="Base_Column_List" />
    from eleverse_user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="getUUID" resultType="java.lang.String">
    select UUID() from dual;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from eleverse_user
    where userID = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.eleverse.eleverse.pojo.User">
    insert into eleverse_user (userID, dataID, username,
      password, version, ylzd, 
      create_time, update_time)
    values (#{userid,jdbcType=VARCHAR}, #{dataid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{ylzd,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.eleverse.eleverse.pojo.User">
    insert into eleverse_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="dataid != null">
        dataID,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="ylzd != null">
        ylzd,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{userid,jdbcType=VARCHAR},
      <if test="dataid != null">
        #{dataid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="ylzd != null">
        #{ylzd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eleverse.eleverse.pojo.User">
    update eleverse_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="ylzd != null">
        ylzd = #{ylzd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eleverse.eleverse.pojo.User">
    update eleverse_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      ylzd = #{ylzd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where userID = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>